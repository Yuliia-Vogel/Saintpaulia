// src/pages/VarietyDetail.jsx
import { useEffect, useState } from "react";
import { useParams, useLocation, useNavigate } from "react-router-dom";

const API_BASE = "http://localhost:8000/saintpaulia/saintpaulias";

export default function VarietyDetail() {
  const { name } = useParams();
  const location = useLocation();
  const navigate = useNavigate();
  const [variety, setVariety] = useState(null);
  const [error, setError] = useState("");

  const fromQuery = location.state?.fromQuery || "";

  // console.log("üîé name param from useParams:", name);

  useEffect(() => {
    const fetchVariety = async () => {
      try {
        const response = await fetch(
          `${API_BASE}/by-name/${encodeURIComponent(name)}`
        );
        if (!response.ok)
          throw new Error("–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –¥–∞–Ω—ñ –ø—Ä–æ —Å–æ—Ä—Ç.");
        const data = await response.json();
        setVariety(data);
      } catch (err) {
        setError(err.message);
      }
    };

    fetchVariety();
  }, [name]);


  const handleBack = () => {
    if (location.state?.fromSearch) {
      navigate(-1); // –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –Ω–∞–∑–∞–¥ –¥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤
    } else {
      navigate("/"); // –∞–±–æ –Ω–∞ –≥–æ–ª–æ–≤–Ω—É
      }
    };

  if (error) return <p style={{ color: "red" }}>{error}</p>;
  if (!variety) return <p>–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...</p>;

  return (
    <div style={{ padding: "20px", lineHeight: "0.5" }}>
      <button
        onClick={() => {
          if (fromQuery) {
            navigate(`/?query=${encodeURIComponent(fromQuery)}`);
          } else {
            navigate("/");
          }
        }}
        style={{ marginBottom: "20px" }}
      >
        ‚Üê –ù–∞–∑–∞–¥
      </button>

      <h1>{variety.name}</h1>
      <p>
        <strong>–ù–∞–∑–≤–∞ —Å–æ—Ä—Ç—É:</strong> {variety.name || "–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –≤—ñ–¥—Å—É—Ç–Ω—è"}
      </p>
      <p>
        <strong>–û–ø–∏—Å:</strong> {variety.description || "–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –≤—ñ–¥—Å—É—Ç–Ω—è"}
      </p>
      <p>
        <strong>–†–æ–∑–º—ñ—Ä —Ä–æ–∑–µ—Ç–∫–∏:</strong>{" "}
        {variety.size_category || "–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –≤—ñ–¥—Å—É—Ç–Ω—è"}
      </p>
      <p>
        <strong>–ö–æ–ª—ñ—Ä –∫–≤—ñ—Ç—ñ–≤:</strong>{" "}
        {variety.flower_color || "–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –≤—ñ–¥—Å—É—Ç–Ω—è"}
      </p>
      <p>
        <strong>–†–æ–∑–º—ñ—Ä –∫–≤—ñ—Ç—ñ–≤:</strong>{" "}
        {variety.flower_size || "–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –≤—ñ–¥—Å—É—Ç–Ω—è"}
      </p>
      <p>
        <strong>–§–æ—Ä–º–∞ –∫–≤—ñ—Ç—ñ–≤:</strong>{" "}
        {variety.flower_shape || "–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –≤—ñ–¥—Å—É—Ç–Ω—è"}
      </p>
      <p>
        <strong>–ù–∞–ø–æ–≤–Ω–µ–Ω—ñ—Å—Ç—å –∫–≤—ñ—Ç—ñ–≤:</strong>{" "}
        {variety.flower_doubleness || "–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –≤—ñ–¥—Å—É—Ç–Ω—è"}
      </p>
      <p>
        <strong>–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ —Ü–≤—ñ—Ç—ñ–Ω–Ω—è:</strong>{" "}
        {variety.blooming_features || "–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –≤—ñ–¥—Å—É—Ç–Ω—è"}
      </p>

      <p>
        <strong>–§–æ—Ä–º–∞ –ª–∏—Å—Ç–∫—ñ–≤:</strong>{" "}
        {variety.leaf_shape || "–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –≤—ñ–¥—Å—É—Ç–Ω—è"}
      </p>
      <p>
        <strong>–°—Ç—Ä–æ–∫–∞—Ç—ñ—Å—Ç—å –ª–∏—Å—Ç—è:</strong>{" "}
        {variety.leaf_variegation || "–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –≤—ñ–¥—Å—É—Ç–Ω—è"}
      </p>

      <p>
        <strong>–°–µ–ª–µ–∫—Ü—ñ–æ–Ω–µ—Ä:</strong> {variety.selectionist || "–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –≤—ñ–¥—Å—É—Ç–Ω—è"}
      </p>
      <p>
        <strong>–†—ñ–∫ —Å–µ–ª–µ–∫—Ü—ñ—ó:</strong> {variety.selection_year || "–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –≤—ñ–¥—Å—É—Ç–Ω—è"}
      </p>
      <p>
        <strong>–ü–æ—Ö–æ–¥–∂–µ–Ω–Ω—è —Å–æ—Ä—Ç—É:</strong> {variety.origin || "–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –≤—ñ–¥—Å—É—Ç–Ω—è"}
      </p>

      <p>
        <strong>–ê–≤—Ç–æ—Ä –∑–∞–ø–∏—Å—É:</strong> {variety.owner_id || "–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –≤—ñ–¥—Å—É—Ç–Ω—è"}
      </p>
      <p>
        <strong>–î–∞—Ç–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∑–∞–ø–∏—Å—É:</strong> {variety.record_creation_date || "–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –≤—ñ–¥—Å—É—Ç–Ω—è"}
      </p>

      {variety.photos && variety.photos.length > 0 && (
        <div
          style={{
            display: "flex",
            flexWrap: "wrap",
            gap: "16px",
            marginTop: "20px",
          }}
        >
          {variety.photos.map((photo) => (
            <img
              key={photo.id}
              src={photo.file_url}
              alt={variety.name}
              style={{ maxWidth: "300px", borderRadius: "8px" }}
            />
          ))}
        </div>
      )}
    </div>
  );
}