"""Fix User.role enum

Revision ID: 2d75e06c8b05
Revises: 
Create Date: 2025-05-02 16:53:19.237939

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '2d75e06c8b05'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=True),
    sa.Column('last_name', sa.String(), nullable=True),
    sa.Column('refresh_token', sa.String(length=255), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_superuser', sa.Boolean(), nullable=True),
    sa.Column('role', sa.Enum('user', 'expert', 'breeder', 'admin', 'superadmin', name='userrole'), nullable=False),
    sa.Column('confirmed', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('saintpaulia_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('action', sa.String(), nullable=False),
    sa.Column('variety_name', sa.String(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_saintpaulia_logs_id'), 'saintpaulia_logs', ['id'], unique=False)
    op.create_table('saintpaulia_varieties',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('size_category', sa.String(), nullable=False),
    sa.Column('flower_color', sa.String(), nullable=False),
    sa.Column('flower_size', sa.String(), nullable=False),
    sa.Column('flower_shape', sa.String(), nullable=True),
    sa.Column('flower_doubleness', sa.String(), nullable=False),
    sa.Column('leaf_shape', sa.String(), nullable=True),
    sa.Column('leaf_variegation', sa.String(), nullable=True),
    sa.Column('photo_url', sa.String(), nullable=True),
    sa.Column('origin', sa.String(), nullable=True),
    sa.Column('selectionist', sa.String(), nullable=False),
    sa.Column('selection_year', sa.Integer(), nullable=True),
    sa.Column('blooming_features', sa.Text(), nullable=True),
    sa.Column('owner_id', sa.Integer(), nullable=False),
    sa.Column('record_creation_date', sa.DateTime(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_saintpaulia_varieties_id'), 'saintpaulia_varieties', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_saintpaulia_varieties_id'), table_name='saintpaulia_varieties')
    op.drop_table('saintpaulia_varieties')
    op.drop_index(op.f('ix_saintpaulia_logs_id'), table_name='saintpaulia_logs')
    op.drop_table('saintpaulia_logs')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
