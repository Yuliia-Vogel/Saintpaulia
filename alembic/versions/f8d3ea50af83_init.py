"""Init

Revision ID: f8d3ea50af83
Revises: 
Create Date: 2025-08-18 13:41:24.247685

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'f8d3ea50af83'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=True),
    sa.Column('last_name', sa.String(), nullable=True),
    sa.Column('refresh_token', sa.String(length=512), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_superuser', sa.Boolean(), nullable=True),
    sa.Column('role', sa.Enum('user', 'expert', 'breeder', 'admin', 'superadmin', name='userrole'), nullable=False),
    sa.Column('confirmed', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('saintpaulia_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('action', sa.String(), nullable=False),
    sa.Column('variety_id', sa.Integer(), nullable=True),
    sa.Column('variety_name', sa.String(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('timestamp', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_saintpaulia_logs_id'), 'saintpaulia_logs', ['id'], unique=False)
    op.create_table('saintpaulia_varieties',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('size_category', sa.String(), nullable=False),
    sa.Column('growth_type', sa.String(), nullable=True),
    sa.Column('main_flower_color', sa.String(), nullable=True),
    sa.Column('flower_color_type', sa.String(), nullable=True),
    sa.Column('flower_edge_color', sa.String(), nullable=True),
    sa.Column('ruffles', sa.String(), nullable=True),
    sa.Column('ruffles_color', sa.String(), nullable=True),
    sa.Column('flower_colors_all', sa.Text(), nullable=True),
    sa.Column('flower_size', sa.String(), nullable=True),
    sa.Column('flower_shape', sa.String(), nullable=True),
    sa.Column('petals_shape', sa.String(), nullable=True),
    sa.Column('flower_doubleness', sa.String(), nullable=True),
    sa.Column('blooming_features', sa.Text(), nullable=True),
    sa.Column('leaf_shape', sa.String(), nullable=True),
    sa.Column('leaf_variegation', sa.String(), nullable=True),
    sa.Column('leaf_color_type', sa.String(), nullable=True),
    sa.Column('leaf_features', sa.Text(), nullable=True),
    sa.Column('origin', sa.String(), nullable=True),
    sa.Column('breeder', sa.String(), nullable=True),
    sa.Column('breeder_origin_country', sa.String(), nullable=True),
    sa.Column('selection_year', sa.Integer(), nullable=True),
    sa.Column('data_source', sa.String(), nullable=True),
    sa.Column('owner_id', sa.Integer(), nullable=False),
    sa.Column('record_creation_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('verification_status', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('verification_note', sa.Text(), nullable=True),
    sa.Column('verified_by', sa.Integer(), nullable=True),
    sa.Column('verification_date', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['verified_by'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_saintpaulia_varieties_id'), 'saintpaulia_varieties', ['id'], unique=False)
    op.create_table('uploaded_photos',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('file_url', sa.String(), nullable=False),
    sa.Column('public_id', sa.String(), nullable=False),
    sa.Column('variety_id', sa.Integer(), nullable=True),
    sa.Column('uploaded_at', sa.DateTime(), nullable=True),
    sa.Column('uploaded_by', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['uploaded_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_uploaded_photos_id'), 'uploaded_photos', ['id'], unique=False)
    op.create_table('photo_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('photo_id', sa.Integer(), nullable=True),
    sa.Column('variety_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('action', sa.String(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['photo_id'], ['uploaded_photos.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('photo_logs')
    op.drop_index(op.f('ix_uploaded_photos_id'), table_name='uploaded_photos')
    op.drop_table('uploaded_photos')
    op.drop_index(op.f('ix_saintpaulia_varieties_id'), table_name='saintpaulia_varieties')
    op.drop_table('saintpaulia_varieties')
    op.drop_index(op.f('ix_saintpaulia_logs_id'), table_name='saintpaulia_logs')
    op.drop_table('saintpaulia_logs')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
